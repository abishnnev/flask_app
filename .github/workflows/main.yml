name: Flask App CI with Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: abishnev/flask-app  # Your Docker Hub repository name

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create Dockerfile
      run: |
        cat <<'EOF' > Dockerfile
        # Flask Production Dockerfile
        FROM python:3.9-slim

        # Set environment variables
        ENV PYTHONDONTWRITEBYTECODE=1 \
            PYTHONUNBUFFERED=1 \
            FLASK_APP=app.py \
            FLASK_ENV=production

        WORKDIR /app

        # Install system dependencies
        RUN apt-get update && \
            apt-get install -y --no-install-recommends gcc python3-dev && \
            rm -rf /var/lib/apt/lists/*

        # Install Python dependencies
        COPY requirements.txt .
        RUN pip install --no-cache-dir --upgrade pip && \
            pip install --no-cache-dir -r requirements.txt

        # Copy application
        COPY . .

        EXPOSE 5000

        CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "4", "app:app"]
        EOF

        # Create default requirements.txt if missing
        if [ ! -f requirements.txt ]; then
          echo "flask>=2.0.0" > requirements.txt
          echo "gunicorn>=20.0.0" >> requirements.txt
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name == 'push' }}  # Only push on push events, not PRs
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
        labels: |
          org.opencontainers.image.source=${{ github.repository_url }}
          org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
          org.opencontainers.image.revision=${{ github.sha }}
