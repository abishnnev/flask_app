name: Build and Push to Docker Hub

on:
  push:
    branches: [ main, master ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_NAME: your-dockerhub-username/flask-app  # Replace with your Docker Hub repo

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Dockerfile
        run: |
          cat <<EOF > Dockerfile
          # Dockerfile generated by GitHub Actions
          FROM python:3.9-slim

          # Set environment variables
          ENV PYTHONDONTWRITEBYTECODE 1
          ENV PYTHONUNBUFFERED 1
          ENV FLASK_APP=app.py
          ENV FLASK_ENV=production

          # Create and set working directory
          WORKDIR /app

          # Install system dependencies
          RUN apt-get update && \\
              apt-get install -y --no-install-recommends gcc python3-dev && \\
              rm -rf /var/lib/apt/lists/*

          # Install Python dependencies
          COPY requirements.txt .
          RUN pip install --no-cache-dir --upgrade pip && \\
              pip install --no-cache-dir -r requirements.txt

          # Copy application code
          COPY . .

          # Expose the port Flask runs on
          EXPOSE 5000

          # Run the application with Gunicorn
          CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "4", "app:app"]
          EOF

          # Create default requirements.txt if it doesn't exist
          if [ ! -f requirements.txt ]; then
            cat <<EOF > requirements.txt
            flask>=2.0.0
            gunicorn>=20.0.0
            EOF
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}
