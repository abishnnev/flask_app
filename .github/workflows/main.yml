name: Build Flask Docker Image

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Dockerfile dynamically
        run: |
          cat <<EOF > Dockerfile
          # Dockerfile generated by GitHub Actions
          FROM python:3.9-slim

          # Set environment variables
          ENV PYTHONDONTWRITEBYTECODE 1
          ENV PYTHONUNBUFFERED 1
          ENV FLASK_APP=app.py
          ENV FLASK_ENV=production

          # Create and set working directory
          WORKDIR /app

          # Install system dependencies
          RUN apt-get update && \\
              apt-get install -y --no-install-recommends gcc python3-dev && \\
              rm -rf /var/lib/apt/lists/*

          # Install Python dependencies
          COPY requirements.txt .
          RUN pip install --no-cache-dir -r requirements.txt

          # Copy application code
          COPY . .

          # Expose the port Flask runs on
          EXPOSE 5000

          # Run the application with Gunicorn
          CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "4", "app:app"]
          EOF
          
          # Verify Dockerfile was created
          cat Dockerfile

      - name: Build Docker image
        run: |
          docker build -t flask-app .
          docker images

      - name: Test the built image
        run: |
          docker run -d -p 5000:5000 --name test-flask-app flask-app
          sleep 5  # Give the container time to start
          docker ps
          docker logs test-flask-app
          docker stop test-flask-app
          docker rm test-flask-app
