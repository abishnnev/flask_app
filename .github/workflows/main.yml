name: Flask App Docker Build and Push

on:
  push:
    branches: [main, master]

env:
  DOCKERHUB_USERNAME: abishnev
  DOCKERHUB_TOKEN: visionplus@9947
  IMAGE_NAME: your-dockerhub-abishnev/flask-app  # Replace with your Docker Hub repository

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Flask app structure
        run: |
          if [ ! -f app.py ] && [ ! -f wsgi.py ]; then
            echo "Error: No Flask application file found (app.py or wsgi.py)"
            exit 1
          fi
          echo "Flask app structure verified"

      - name: Create Dockerfile
        run: |
          cat <<'DOCKERFILE' > Dockerfile
          # Flask Production Dockerfile
          FROM python:3.9-slim
          
          # Set environment variables
          ENV PYTHONDONTWRITEBYTECODE=1 \
              PYTHONUNBUFFERED=1 \
              FLASK_APP=app.py \
              FLASK_ENV=production
          
          WORKDIR /app
          
          # Install system dependencies
          RUN apt-get update && \
              apt-get install -y --no-install-recommends gcc python3-dev && \
              rm -rf /var/lib/apt/lists/*
          
          # Install Python dependencies
          COPY requirements.txt .
          RUN pip install --no-cache-dir --upgrade pip && \
              pip install --no-cache-dir -r requirements.txt
          
          # Copy application
          COPY . .
          
          EXPOSE 5000
          
          CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "4", "app:app"]
          DOCKERFILE
          
          # Create default requirements if missing
          if [ ! -f requirements.txt ]; then
            echo "Creating default requirements.txt"
            echo -e "flask\ngunicorn" > requirements.txt
          fi
          
          echo "Dockerfile created successfully"
          cat Dockerfile
          echo -e "\nRequirements:"
          cat requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: abishnev
          password: visionplus@9947

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Verify pushed image
        run: |
          echo "Image successfully pushed to:"
          echo "${{ env.IMAGE_NAME }}:latest"
          echo "${{ env.IMAGE_NAME }}:${{ github.sha }}"
